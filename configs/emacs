;;  Emacs Configuration file for wiremoons
;;
;;    Originally Created:  8th Jan 2012
;;    Last Updated: 08 Jan 2012
;;    Updated on 22 Feb 2014
;;    Updated on 15 May 2014 - added golang support
;;    Updated on 09 Dec 2014 - minor corrections
;;    Updated on 28 Dec 2014 - added UFT-8 support
;;    Updated on 21 Jan 2015 - added c language support, yasnippit, auto-complete
;;    Updated on 09 Jan 2016 - added text mode improvements for bullet handling
;;    Updated on 03 Jun 2016 - added CUA mode setting
;;	  Updated on 11 Sep 2016 - removed marmalade repo (cert error) added follow symlink command
;;	  Updated on 11 Sep 2016 - added auto install of Emacs packages
;;	  Updated on 18 Sep 2016 - added auto install of multi-cursor package and key bindings
;;
;;  NB:  you can reload this file once editied with:
;;     M-x load-file RET RET
;;  To find bracket issues run:   
;;     M-x check-parens
;;
;; Load a colour scheme
;;(load-theme 'tsdh-dark)
(load-theme 'tsdh-light)
;;
;; set default languange and use typopunct-mode to be able to use
;; typographical quotes and em-dash etc
;; can use M-x typopunct-mode to change
;; Type ‘C-q "’ and ‘C-q '’ to insert literal ASCII double and single
;; if neeed to overide this mode.
;;(require 'typopunct)
;;(typopunct-change-language 'english t)
;;
;; set font face and font size
(set-face-font 'default "Consolas-13")
;;
;; set emacs to use CUA mode (disabled: 11 Sep 2016)
;;(cua-mode t)
;;(setq cua-auto-tabify-rectangles nil) ;; Don't tabify after rectangle commands
;;(transient-mark-mode 1) ;; No region when it is not highlighted
;;(setq cua-keep-region-after-copy t) ;; Standard Windows behaviour
;;
;; Emacs should follow symlinks and edit actual linked file
(setq vc-follow-symlinks t)
;;
;; Add the characters - + or * as bullet points in text so they are recognised as
;; paragraph boundaries also, and therefore M-q respects their formating.
;; The original value is "\f\\|[      ]*$", so we add the bullets (-), (+), and (*).
;; There is no need for "^" as the regexp is matched at the beginning of line.
(setq paragraph-start "\f\\|[ \t]*$\\|[ \t]*[-+*] ")
;;
;; Don't use the double spaces to denote the end of a sentance - as used by
;; American typists.
(setq sentence-end-double-space nil)
;;
;; tell Emacs to use Aspell instead of default ispell
;; make sure it is installed - add packages: aspell aspell-en
(setq-default ispell-program-name "aspell")
;;
;; spell check as you type using `flyspell-mode'
;; for all documents use flyspell-mode uncomment below:
;;(setq-default flyspell-mode t)
;; or just use flyspell-mode for these doucment types:
(dolist (hook '(text-mode-hook))
      (add-hook hook (lambda () (flyspell-mode 1))))
(dolist (hook '(change-log-mode-hook log-edit-mode-hook))
      (add-hook hook (lambda () (flyspell-mode -1))))
;; run flyspell on current file buffer to find all spelling errors
(global-set-key (kbd "C-c s") 'flyspell-buffer)
;; flyspell next highlighted word that is a spelling error
(global-set-key (kbd "C-c w") 'flyspell-goto-next-error)
;;
;; EMACS PACKAGING
;;
;; load the package management
(require 'package)
;; To prevent initialising twice - run below first
(setq package-enable-at-startup nil)   
;; Add addtional repositories for package management
(setq package-archives '(("gnu" . "http://elpa.gnu.org/packages/")
                         ("melpa" . "http://melpa.milkbox.net/packages/")))
;; ensures the installed packages in ~/.emacs.d/elpa/ are all loaded for Emacs
(package-initialize)
;;
;; auto-load any packages we are missing
(unless (package-installed-p 'use-package)
  (package-refresh-contents)
  (package-install 'use-package))
(eval-when-compile (require 'use-package))
;;
;; List packages to obtain and install if needed below
;;
;; Go language support
(use-package go-mode
  :ensure t)
(use-package go-autocomplete
  :ensure t)
;;
;; powershell script editing support
(use-package powershell
  :ensure t)
;;
;; auto complete and support for c
(use-package auto-complete
  :ensure t)
(use-package auto-complete-c-headers
  :ensure t)
;;
;;
(use-package yasnippet
  :ensure t)
;;
;; 
(use-package iedit
  :ensure t)
;;
;;
(use-package flycheck
  :ensure t)
;;
;;
(use-package flymake-go
  :ensure t)

;;
;; Mulitple-cursor package: https://github.com/magnars/multiple-cursors.el
(use-package multiple-cursors
  :ensure t)
;;
;; enable abbrev mode and specify the file to keep, and save on exit
(setq-default abbrev-mode t)
(read-abbrev-file "~/.abbrev_defs")
(setq save-abbrevs t)
;;
;; Use ido-mode for buffer management - use C-x b to access
(ido-mode t)
;;
;; don't make pesky backup files
(setq make-backup-files nil)
;;
;; ADD KEY BINDINGS
;;
;; used to insert text into defined rectangle:
(global-set-key (kbd "C-x r i") 'string-insert-rectangle)
;; bind key to start iedit mode - as is broken by default
(define-key global-map (kbd "C-c ;") 'iedit-mode)
;;
;; TAB MANAGEMENT AND SETTINGS
;;
;; dont insert tabs - use spaces instead
(setq-default indent-tabs-mode nil)
;; set tabs to four space and the tab stops to use
(setq tab-width 4)
(setq tab-stop-list '(4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 64 68 72 76 80))
;; highlight region between point and mark and make the region visible (up to the next operation on it)
(transient-mark-mode t)
;;
;; highlight during query
(setq query-replace-highlight t)        
;; highlight incremental search
(setq search-highlight t)               
;;
;; Show matching parenthesis. How can you live without it.
(show-paren-mode t)
;; Don't add new lines to the end of a file when using down-arrow key
(setq next-line-add-newlines nil)
;; show line numbers in files and add space between number and file's text / content
(global-linum-mode t)
(setq linum-format "%d  ")
;; Open unidentified files in text mode - as the default
(setq default-major-mode 'text-mode)
;; Always prefer UTF-8 support
(prefer-coding-system 'utf-8)

;;
;; C Source Code
;; Setup for c source code
;;
;; make sure c mode is enabled for .h .c or .cpp files
(require 'cc-mode)
;; change from 'GNU' default style to 'linux' - to remove brace indentation
(setq c-default-style "linux" c-basic-offset 4)
;; set indentation level to 4
(setq-default tab-width 4 indent-tabs-mode t)
;; auto indent code when return is pressed 
(define-key c-mode-base-map (kbd "RET") 'newline-and-indent)
;;
;; turn on automatic bracket insertion by pairs. New in Emacs 24
(electric-pair-mode 1)
;;
;; enable auto-complete for source code files - below is generic for all languages
(require 'auto-complete)
(require 'auto-complete-config)
(ac-config-default)
;;
;; add yasnippet support for all languages, and enable it
(require 'yasnippet)
(yas-global-mode 1)
;;
;; define a function to load auto-complete-c-header called on c hooks being started
(defun my:ac-c-header-init ()
  (require 'auto-complete-c-headers)
  (add-to-list 'ac-sources 'ac-source-c-headers))
(add-hook 'c-mode-hook 'my:ac-c-header-init)
;;
;; enable flymake for syntax checking - require below in your Makefile:
;; check-syntax:
;;     gcc -o nul -S ${CHK_SOURCES}
;; to use `M-x flymake` or add "(add-hook 'find-file-hook 'flymake-find-file-hook)"
(require 'flymake)
;;
;; enable and configure key for multiple-cursor support
(require 'multiple-cursors)
;; add a cursor to each line when an active region that spans multiple lines
;;(global-set-key "\C-c \C-c" 'mc/edit-lines)
;;add multiple cursors not based on continuous lines, but based on keywords in the buffer
(global-set-key (kbd "C-c d") 'mc/mark-next-like-this)
;;(global-set-key "\C-<" 'mc/mark-previous-like-this)
(global-set-key (kbd "C-c a") 'mc/mark-all-like-this)
;;
;; GO LANG
;; provide support for Go language: M-x list-packages 
(defun my-go-mode-hook ()
  ; Call Gofmt before saving
  (add-hook 'before-save-hook 'gofmt-before-save)
  ; Customize compile command to run go build
  (if (not (string-match "go" compile-command))
      (set (make-local-variable 'compile-command)
           "go build -v && go test -v && go vet"))
  ; Godef jump key binding
  (local-set-key (kbd "M-.") 'godef-jump))
(add-hook 'go-mode-hook 'my-go-mode-hook)
;;
;; bind a global key to run: M-x compile
(global-set-key "\C-x\C-m" 'compile)

;;
;; Git support
;; Add packages to support Git use below:


;;
;; Turn off audio and visual bell as they are annoying...
(setq ring-bell-function 'ignore)

;;
;; AUTO ADDED INFORMATION BELOW
;;
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages
   (quote
	(flymake-go flycheck iedit yasnippet auto-complete-c-headers auto-complete powershell go-mode use-package))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
